// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type ConfigPutSessioncookieRequest struct {
	AdminConfigSessioncookie *shared.AdminConfigSessioncookie `request:"mediaType=application/json"`
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

func (o *ConfigPutSessioncookieRequest) GetAdminConfigSessioncookie() *shared.AdminConfigSessioncookie {
	if o == nil {
		return nil
	}
	return o.AdminConfigSessioncookie
}

func (o *ConfigPutSessioncookieRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

// ConfigPutSessioncookie500ApplicationJSON - Unexpected event on server
type ConfigPutSessioncookie500ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigPutSessioncookie500ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigPutSessioncookie404ApplicationJSON - Requests resource was not found.
type ConfigPutSessioncookie404ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigPutSessioncookie404ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigPutSessioncookie403ApplicationJSON - Invalid user information or Not Allowed
type ConfigPutSessioncookie403ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigPutSessioncookie403ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

type ConfigPutSessioncookieResponse struct {
	// Request processed successfully.
	AdminConfigSessioncookie *shared.AdminConfigSessioncookie
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Invalid user information or Not Allowed
	ConfigPutSessioncookie403ApplicationJSONObject *ConfigPutSessioncookie403ApplicationJSON
	// Requests resource was not found.
	ConfigPutSessioncookie404ApplicationJSONObject *ConfigPutSessioncookie404ApplicationJSON
	// Unexpected event on server
	ConfigPutSessioncookie500ApplicationJSONObject *ConfigPutSessioncookie500ApplicationJSON
}

func (o *ConfigPutSessioncookieResponse) GetAdminConfigSessioncookie() *shared.AdminConfigSessioncookie {
	if o == nil {
		return nil
	}
	return o.AdminConfigSessioncookie
}

func (o *ConfigPutSessioncookieResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ConfigPutSessioncookieResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ConfigPutSessioncookieResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ConfigPutSessioncookieResponse) GetConfigPutSessioncookie403ApplicationJSONObject() *ConfigPutSessioncookie403ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ConfigPutSessioncookie403ApplicationJSONObject
}

func (o *ConfigPutSessioncookieResponse) GetConfigPutSessioncookie404ApplicationJSONObject() *ConfigPutSessioncookie404ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ConfigPutSessioncookie404ApplicationJSONObject
}

func (o *ConfigPutSessioncookieResponse) GetConfigPutSessioncookie500ApplicationJSONObject() *ConfigPutSessioncookie500ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ConfigPutSessioncookie500ApplicationJSONObject
}
