// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type YaraPackageGenerateRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

// YaraPackageGenerate500ApplicationJSON - Unexpected event on server
type YaraPackageGenerate500ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

// YaraPackageGenerate403ApplicationJSON - Invalid user information or Not Allowed
type YaraPackageGenerate403ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

type YaraPackageGenerate200ApplicationJSONIssuesGeneral struct {
	Message  *string `json:"message,omitempty"`
	Severity *string `json:"severity,omitempty"`
}

type YaraPackageGenerate200ApplicationJSONIssuesSource struct {
	Message  *string `json:"message,omitempty"`
	Severity *string `json:"severity,omitempty"`
}

// YaraPackageGenerate200ApplicationJSONIssues - Stores a map of issues. Each key represents the according source, except "general", which contains general errors occurred during the generation process
type YaraPackageGenerate200ApplicationJSONIssues struct {
	// Contains general errors occurred during the generation process
	General []YaraPackageGenerate200ApplicationJSONIssuesGeneral `json:"general,omitempty"`
	Source  []YaraPackageGenerate200ApplicationJSONIssuesSource  `json:"source,omitempty"`
}

// YaraPackageGenerate200ApplicationJSONStatus - Current status of generating the package.
type YaraPackageGenerate200ApplicationJSONStatus string

const (
	YaraPackageGenerate200ApplicationJSONStatusIdle       YaraPackageGenerate200ApplicationJSONStatus = "idle"
	YaraPackageGenerate200ApplicationJSONStatusError      YaraPackageGenerate200ApplicationJSONStatus = "error"
	YaraPackageGenerate200ApplicationJSONStatusInprogress YaraPackageGenerate200ApplicationJSONStatus = "inprogress"
)

func (e YaraPackageGenerate200ApplicationJSONStatus) ToPointer() *YaraPackageGenerate200ApplicationJSONStatus {
	return &e
}

func (e *YaraPackageGenerate200ApplicationJSONStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idle":
		fallthrough
	case "error":
		fallthrough
	case "inprogress":
		*e = YaraPackageGenerate200ApplicationJSONStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for YaraPackageGenerate200ApplicationJSONStatus: %v", v)
	}
}

// YaraPackageGenerate200ApplicationJSON - Request processed successfully.
type YaraPackageGenerate200ApplicationJSON struct {
	// Stores a map of issues. Each key represents the according source, except "general", which contains general errors occurred during the generation process
	Issues *YaraPackageGenerate200ApplicationJSONIssues `json:"issues,omitempty"`
	// Used only when status is inprogress, otherwise its empty
	StartTime *string `json:"start_time,omitempty"`
	// Current status of generating the package.
	Status *YaraPackageGenerate200ApplicationJSONStatus `json:"status,omitempty"`
}

type YaraPackageGenerateResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Request processed successfully.
	YaraPackageGenerate200ApplicationJSONObject *YaraPackageGenerate200ApplicationJSON
	// Invalid user information or Not Allowed
	YaraPackageGenerate403ApplicationJSONObject *YaraPackageGenerate403ApplicationJSON
	// Unexpected event on server
	YaraPackageGenerate500ApplicationJSONObject *YaraPackageGenerate500ApplicationJSON
}
