// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type ConfigUpdateSkipHashRequest struct {
	// A list of all skip/white/black-listed hashes.
	SkipList *shared.SkipList `request:"mediaType=application/json"`
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

func (o *ConfigUpdateSkipHashRequest) GetSkipList() *shared.SkipList {
	if o == nil {
		return nil
	}
	return o.SkipList
}

func (o *ConfigUpdateSkipHashRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

// ConfigUpdateSkipHashConfigResponseResponseBody - Unexpected event on server
type ConfigUpdateSkipHashConfigResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigUpdateSkipHashConfigResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigUpdateSkipHashConfigResponseBody - Requests resource was not found.
type ConfigUpdateSkipHashConfigResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigUpdateSkipHashConfigResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigUpdateSkipHashResponseBody - Invalid user information or Not Allowed
type ConfigUpdateSkipHashResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigUpdateSkipHashResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

type ConfigUpdateSkipHashResponse struct {
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *ConfigUpdateSkipHashResponseBody
	// Requests resource was not found.
	FourHundredAndFourApplicationJSONObject *ConfigUpdateSkipHashConfigResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *ConfigUpdateSkipHashConfigResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// A list of all skip/white/black-listed hashes.
	SkipList *shared.SkipList
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ConfigUpdateSkipHashResponse) GetFourHundredAndThreeApplicationJSONObject() *ConfigUpdateSkipHashResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *ConfigUpdateSkipHashResponse) GetFourHundredAndFourApplicationJSONObject() *ConfigUpdateSkipHashConfigResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *ConfigUpdateSkipHashResponse) GetFiveHundredApplicationJSONObject() *ConfigUpdateSkipHashConfigResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *ConfigUpdateSkipHashResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ConfigUpdateSkipHashResponse) GetSkipList() *shared.SkipList {
	if o == nil {
		return nil
	}
	return o.SkipList
}

func (o *ConfigUpdateSkipHashResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ConfigUpdateSkipHashResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
