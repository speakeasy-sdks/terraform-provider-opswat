// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DownloadFileRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey *string `header:"style=simple,explode=false,name=apikey"`
	// The data_id comes from the result of `Analyze a file`. In case of sanitizing the content of an archive, the data_id of contained file can be found in `Fetch analysis result`.
	DataID string `pathParam:"style=simple,explode=false,name=data_id"`
}

func (o *DownloadFileRequest) GetApikey() *string {
	if o == nil {
		return nil
	}
	return o.Apikey
}

func (o *DownloadFileRequest) GetDataID() string {
	if o == nil {
		return ""
	}
	return o.DataID
}

// DownloadFileAnalysisResponseResponseBody - Unexpected event on server
type DownloadFileAnalysisResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *DownloadFileAnalysisResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// DownloadFileAnalysisResponseBody - The user has no rights for this operation.
type DownloadFileAnalysisResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *DownloadFileAnalysisResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// DownloadFileResponseBody - File could not be found
type DownloadFileResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *DownloadFileResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

type DownloadFileResponse struct {
	// Returns the sanitized or DLP processed content.
	TwoHundredApplicationOctetStreamBytes []byte
	// File could not be found
	FourHundredAndFourApplicationJSONObject *DownloadFileResponseBody
	// The user has no rights for this operation.
	FourHundredAndFiveApplicationJSONObject *DownloadFileAnalysisResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *DownloadFileAnalysisResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *DownloadFileResponse) GetTwoHundredApplicationOctetStreamBytes() []byte {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationOctetStreamBytes
}

func (o *DownloadFileResponse) GetFourHundredAndFourApplicationJSONObject() *DownloadFileResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *DownloadFileResponse) GetFourHundredAndFiveApplicationJSONObject() *DownloadFileAnalysisResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *DownloadFileResponse) GetFiveHundredApplicationJSONObject() *DownloadFileAnalysisResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *DownloadFileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DownloadFileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DownloadFileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
