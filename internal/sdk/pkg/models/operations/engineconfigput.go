// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EngineConfigPutRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
	// The unique engine identifier
	EngineID string `pathParam:"style=simple,explode=false,name=engineId"`
}

func (o *EngineConfigPutRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

func (o *EngineConfigPutRequest) GetEngineID() string {
	if o == nil {
		return ""
	}
	return o.EngineID
}

// EngineConfigPutEnginesResponse500ResponseBody - Unexpected event on server
type EngineConfigPutEnginesResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigPutEnginesResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigPutEnginesResponse405ResponseBody - The user has no rights for this operation.
type EngineConfigPutEnginesResponse405ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigPutEnginesResponse405ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigPutEnginesResponseResponseBody - Invalid user information or Not Allowed
type EngineConfigPutEnginesResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigPutEnginesResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigPutEnginesResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type EngineConfigPutEnginesResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigPutEnginesResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigPutResponseBody - Each engine has different number and types of configurations
type EngineConfigPutResponseBody struct {
}

type EngineConfigPutResponse struct {
	// Request processed successfully
	TwoHundredApplicationJSONObject *EngineConfigPutResponseBody
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *EngineConfigPutEnginesResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *EngineConfigPutEnginesResponseResponseBody
	// The user has no rights for this operation.
	FourHundredAndFiveApplicationJSONObject *EngineConfigPutEnginesResponse405ResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *EngineConfigPutEnginesResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *EngineConfigPutResponse) GetTwoHundredApplicationJSONObject() *EngineConfigPutResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *EngineConfigPutResponse) GetFourHundredApplicationJSONObject() *EngineConfigPutEnginesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *EngineConfigPutResponse) GetFourHundredAndThreeApplicationJSONObject() *EngineConfigPutEnginesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *EngineConfigPutResponse) GetFourHundredAndFiveApplicationJSONObject() *EngineConfigPutEnginesResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *EngineConfigPutResponse) GetFiveHundredApplicationJSONObject() *EngineConfigPutEnginesResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *EngineConfigPutResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EngineConfigPutResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EngineConfigPutResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
