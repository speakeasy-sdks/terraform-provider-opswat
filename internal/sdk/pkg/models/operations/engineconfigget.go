// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EngineConfigGetRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
	// The unique engine identifier
	EngineID string `pathParam:"style=simple,explode=false,name=engineId"`
}

func (o *EngineConfigGetRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

func (o *EngineConfigGetRequest) GetEngineID() string {
	if o == nil {
		return ""
	}
	return o.EngineID
}

// EngineConfigGetEnginesResponse500ResponseBody - Unexpected event on server
type EngineConfigGetEnginesResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigGetEnginesResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigGetEnginesResponse405ResponseBody - The user has no rights for this operation.
type EngineConfigGetEnginesResponse405ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigGetEnginesResponse405ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigGetEnginesResponseResponseBody - Invalid user information or Not Allowed
type EngineConfigGetEnginesResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigGetEnginesResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigGetEnginesResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type EngineConfigGetEnginesResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineConfigGetEnginesResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineConfigGetResponseBody - Each engine has different number and types of configurations
type EngineConfigGetResponseBody struct {
}

type EngineConfigGetResponse struct {
	// Request processed successfully
	TwoHundredApplicationJSONObject *EngineConfigGetResponseBody
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *EngineConfigGetEnginesResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *EngineConfigGetEnginesResponseResponseBody
	// The user has no rights for this operation.
	FourHundredAndFiveApplicationJSONObject *EngineConfigGetEnginesResponse405ResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *EngineConfigGetEnginesResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *EngineConfigGetResponse) GetTwoHundredApplicationJSONObject() *EngineConfigGetResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *EngineConfigGetResponse) GetFourHundredApplicationJSONObject() *EngineConfigGetEnginesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *EngineConfigGetResponse) GetFourHundredAndThreeApplicationJSONObject() *EngineConfigGetEnginesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *EngineConfigGetResponse) GetFourHundredAndFiveApplicationJSONObject() *EngineConfigGetEnginesResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *EngineConfigGetResponse) GetFiveHundredApplicationJSONObject() *EngineConfigGetEnginesResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *EngineConfigGetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EngineConfigGetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EngineConfigGetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
