// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// EngineUnpinType - Unpin engine or database to applying automatic updates on it.
// (If it is not defined both engine and database will be unpinned.)
type EngineUnpinType string

const (
	EngineUnpinTypeEngine   EngineUnpinType = "engine"
	EngineUnpinTypeDatabase EngineUnpinType = "database"
)

func (e EngineUnpinType) ToPointer() *EngineUnpinType {
	return &e
}

func (e *EngineUnpinType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "engine":
		fallthrough
	case "database":
		*e = EngineUnpinType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EngineUnpinType: %v", v)
	}
}

type EngineUnpinRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
	// The unique engine identifier
	EngineID string `pathParam:"style=simple,explode=false,name=engineId"`
	// Unpin engine or database to applying automatic updates on it.
	// (If it is not defined both engine and database will be unpinned.)
	Type *EngineUnpinType `header:"style=simple,explode=false,name=type"`
}

// EngineUnpin500ApplicationJSON - Unexpected event on server
type EngineUnpin500ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

// EngineUnpin405ApplicationJSON - The user has no rights for this operation.
type EngineUnpin405ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

// EngineUnpin403ApplicationJSON - Invalid user information or Not Allowed
type EngineUnpin403ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

// EngineUnpin400ApplicationJSON - Bad Request (e.g. invalid header, apikey is missing or invalid).
type EngineUnpin400ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

type EngineUnpin200ApplicationJSONResult string

const (
	EngineUnpin200ApplicationJSONResultEngineIsUnpinned                 EngineUnpin200ApplicationJSONResult = "Engine is unpinned"
	EngineUnpin200ApplicationJSONResultDatabaseIsUnpinned               EngineUnpin200ApplicationJSONResult = "Database is unpinned"
	EngineUnpin200ApplicationJSONResultBothEngineAndDatabaseAreUnpinned EngineUnpin200ApplicationJSONResult = "Both engine and database are unpinned"
)

func (e EngineUnpin200ApplicationJSONResult) ToPointer() *EngineUnpin200ApplicationJSONResult {
	return &e
}

func (e *EngineUnpin200ApplicationJSONResult) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Engine is unpinned":
		fallthrough
	case "Database is unpinned":
		fallthrough
	case "Both engine and database are unpinned":
		*e = EngineUnpin200ApplicationJSONResult(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EngineUnpin200ApplicationJSONResult: %v", v)
	}
}

// EngineUnpin200ApplicationJSON - Request processed successfully
type EngineUnpin200ApplicationJSON struct {
	Result *EngineUnpin200ApplicationJSONResult `json:"result,omitempty"`
}

type EngineUnpinResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Request processed successfully
	EngineUnpin200ApplicationJSONObject *EngineUnpin200ApplicationJSON
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	EngineUnpin400ApplicationJSONObject *EngineUnpin400ApplicationJSON
	// Invalid user information or Not Allowed
	EngineUnpin403ApplicationJSONObject *EngineUnpin403ApplicationJSON
	// The user has no rights for this operation.
	EngineUnpin405ApplicationJSONObject *EngineUnpin405ApplicationJSON
	// Unexpected event on server
	EngineUnpin500ApplicationJSONObject *EngineUnpin500ApplicationJSON
}
