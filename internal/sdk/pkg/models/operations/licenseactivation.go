// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/gerbil/terraform-provider-Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type LicenseActivationRequest struct {
	PostlicenseKeyRequest *shared.PostlicenseKeyRequest `request:"mediaType=application/json"`
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

func (o *LicenseActivationRequest) GetPostlicenseKeyRequest() *shared.PostlicenseKeyRequest {
	if o == nil {
		return nil
	}
	return o.PostlicenseKeyRequest
}

func (o *LicenseActivationRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

// LicenseActivationLicenseResponse500ResponseBody - Unexpected event on server
type LicenseActivationLicenseResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *LicenseActivationLicenseResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// LicenseActivationLicenseResponseResponseBody - Invalid user information or Not Allowed
type LicenseActivationLicenseResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *LicenseActivationLicenseResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// LicenseActivationLicenseResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type LicenseActivationLicenseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *LicenseActivationLicenseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// LicenseActivationResponseBody - Request processed successfully
type LicenseActivationResponseBody struct {
	Success *bool `json:"success,omitempty"`
}

func (o *LicenseActivationResponseBody) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

type LicenseActivationResponse struct {
	// Request processed successfully
	TwoHundredApplicationJSONObject *LicenseActivationResponseBody
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *LicenseActivationLicenseResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *LicenseActivationLicenseResponseResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *LicenseActivationLicenseResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *LicenseActivationResponse) GetTwoHundredApplicationJSONObject() *LicenseActivationResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *LicenseActivationResponse) GetFourHundredApplicationJSONObject() *LicenseActivationLicenseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *LicenseActivationResponse) GetFourHundredAndThreeApplicationJSONObject() *LicenseActivationLicenseResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *LicenseActivationResponse) GetFiveHundredApplicationJSONObject() *LicenseActivationLicenseResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *LicenseActivationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *LicenseActivationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *LicenseActivationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
