// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type LicenseGetRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

func (o *LicenseGetRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

// LicenseGet500ApplicationJSON - Unexpected event on server
type LicenseGet500ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *LicenseGet500ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// LicenseGet403ApplicationJSON - Invalid user information or Not Allowed
type LicenseGet403ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *LicenseGet403ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

type LicenseGetResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Information about the licensed product (product type, number of activations, deploymentId, expiration date and days left)
	LicenseInformation *shared.LicenseInformation
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Invalid user information or Not Allowed
	LicenseGet403ApplicationJSONObject *LicenseGet403ApplicationJSON
	// Unexpected event on server
	LicenseGet500ApplicationJSONObject *LicenseGet500ApplicationJSON
}

func (o *LicenseGetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *LicenseGetResponse) GetLicenseInformation() *shared.LicenseInformation {
	if o == nil {
		return nil
	}
	return o.LicenseInformation
}

func (o *LicenseGetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *LicenseGetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *LicenseGetResponse) GetLicenseGet403ApplicationJSONObject() *LicenseGet403ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.LicenseGet403ApplicationJSONObject
}

func (o *LicenseGetResponse) GetLicenseGet500ApplicationJSONObject() *LicenseGet500ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.LicenseGet500ApplicationJSONObject
}
