// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EngineEnableRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
	// The unique engine identifier
	EngineID string `pathParam:"style=simple,explode=false,name=engineId"`
}

func (o *EngineEnableRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

func (o *EngineEnableRequest) GetEngineID() string {
	if o == nil {
		return ""
	}
	return o.EngineID
}

// EngineEnableEnginesResponse500ResponseBody - Unexpected event on server
type EngineEnableEnginesResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnableEnginesResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnableEnginesResponse405ResponseBody - The user has no rights for this operation.
type EngineEnableEnginesResponse405ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnableEnginesResponse405ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnableEnginesResponseResponseBody - Invalid user information or Not Allowed
type EngineEnableEnginesResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnableEnginesResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnableEnginesResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type EngineEnableEnginesResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnableEnginesResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnableResponseBody - Request processed successfully
type EngineEnableResponseBody struct {
	Result *string `json:"result,omitempty"`
}

func (o *EngineEnableResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

type EngineEnableResponse struct {
	// Request processed successfully
	TwoHundredApplicationJSONObject *EngineEnableResponseBody
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *EngineEnableEnginesResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *EngineEnableEnginesResponseResponseBody
	// The user has no rights for this operation.
	FourHundredAndFiveApplicationJSONObject *EngineEnableEnginesResponse405ResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *EngineEnableEnginesResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *EngineEnableResponse) GetTwoHundredApplicationJSONObject() *EngineEnableResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *EngineEnableResponse) GetFourHundredApplicationJSONObject() *EngineEnableEnginesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *EngineEnableResponse) GetFourHundredAndThreeApplicationJSONObject() *EngineEnableEnginesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *EngineEnableResponse) GetFourHundredAndFiveApplicationJSONObject() *EngineEnableEnginesResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *EngineEnableResponse) GetFiveHundredApplicationJSONObject() *EngineEnableEnginesResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *EngineEnableResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EngineEnableResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EngineEnableResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
