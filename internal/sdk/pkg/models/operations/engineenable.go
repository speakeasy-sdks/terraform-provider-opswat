// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EngineEnableRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
	// The unique engine identifier
	EngineID string `pathParam:"style=simple,explode=false,name=engineId"`
}

func (o *EngineEnableRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

func (o *EngineEnableRequest) GetEngineID() string {
	if o == nil {
		return ""
	}
	return o.EngineID
}

// EngineEnable500ApplicationJSON - Unexpected event on server
type EngineEnable500ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnable500ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnable405ApplicationJSON - The user has no rights for this operation.
type EngineEnable405ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnable405ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnable403ApplicationJSON - Invalid user information or Not Allowed
type EngineEnable403ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnable403ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnable400ApplicationJSON - Bad Request (e.g. invalid header, apikey is missing or invalid).
type EngineEnable400ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineEnable400ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineEnable200ApplicationJSON - Request processed successfully
type EngineEnable200ApplicationJSON struct {
	Result *string `json:"result,omitempty"`
}

func (o *EngineEnable200ApplicationJSON) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

type EngineEnableResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Request processed successfully
	EngineEnable200ApplicationJSONObject *EngineEnable200ApplicationJSON
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	EngineEnable400ApplicationJSONObject *EngineEnable400ApplicationJSON
	// Invalid user information or Not Allowed
	EngineEnable403ApplicationJSONObject *EngineEnable403ApplicationJSON
	// The user has no rights for this operation.
	EngineEnable405ApplicationJSONObject *EngineEnable405ApplicationJSON
	// Unexpected event on server
	EngineEnable500ApplicationJSONObject *EngineEnable500ApplicationJSON
}

func (o *EngineEnableResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EngineEnableResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EngineEnableResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *EngineEnableResponse) GetEngineEnable200ApplicationJSONObject() *EngineEnable200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.EngineEnable200ApplicationJSONObject
}

func (o *EngineEnableResponse) GetEngineEnable400ApplicationJSONObject() *EngineEnable400ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.EngineEnable400ApplicationJSONObject
}

func (o *EngineEnableResponse) GetEngineEnable403ApplicationJSONObject() *EngineEnable403ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.EngineEnable403ApplicationJSONObject
}

func (o *EngineEnableResponse) GetEngineEnable405ApplicationJSONObject() *EngineEnable405ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.EngineEnable405ApplicationJSONObject
}

func (o *EngineEnableResponse) GetEngineEnable500ApplicationJSONObject() *EngineEnable500ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.EngineEnable500ApplicationJSONObject
}
