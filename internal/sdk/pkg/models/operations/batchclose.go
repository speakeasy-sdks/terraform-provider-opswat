// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type BatchCloseRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey *string `header:"style=simple,explode=false,name=apikey"`
	// The batch identifier used to submit files in the batch and to close the batch.
	BatchID string `pathParam:"style=simple,explode=false,name=batchId"`
}

func (o *BatchCloseRequest) GetApikey() *string {
	if o == nil {
		return nil
	}
	return o.Apikey
}

func (o *BatchCloseRequest) GetBatchID() string {
	if o == nil {
		return ""
	}
	return o.BatchID
}

// BatchCloseBatchResponse500ResponseBody - Unexpected event on server
type BatchCloseBatchResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCloseBatchResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCloseBatchResponseResponseBody - Requests resource was not found.
type BatchCloseBatchResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCloseBatchResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCloseBatchResponseBody - Invalid user information or Not Allowed
type BatchCloseBatchResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCloseBatchResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCloseResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type BatchCloseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCloseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

type BatchCloseResponse struct {
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *BatchCloseResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *BatchCloseBatchResponseBody
	// Requests resource was not found.
	FourHundredAndFourApplicationJSONObject *BatchCloseBatchResponseResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *BatchCloseBatchResponse500ResponseBody
	// Batch successfully closed.
	BatchResponseClosed *shared.BatchResponseClosed
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *BatchCloseResponse) GetFourHundredApplicationJSONObject() *BatchCloseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *BatchCloseResponse) GetFourHundredAndThreeApplicationJSONObject() *BatchCloseBatchResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *BatchCloseResponse) GetFourHundredAndFourApplicationJSONObject() *BatchCloseBatchResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *BatchCloseResponse) GetFiveHundredApplicationJSONObject() *BatchCloseBatchResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *BatchCloseResponse) GetBatchResponseClosed() *shared.BatchResponseClosed {
	if o == nil {
		return nil
	}
	return o.BatchResponseClosed
}

func (o *BatchCloseResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *BatchCloseResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *BatchCloseResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
