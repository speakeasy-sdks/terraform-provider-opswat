// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type HashGetRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey *string `header:"style=simple,explode=false,name=apikey"`
	// The first item order in the list child files of archive file
	First *int64 `queryParam:"style=form,explode=true,name=first"`
	// Hash value to search. This can be md5, sha1 or sha256
	Hash string `pathParam:"style=simple,explode=false,name=hash"`
	// False (default): API will return "Not Found" if the verdict is in progress.
	//
	// True:
	//   If the queried hash has a completed processing result before, API will return the completed processing result.
	//   If this hash doesn't have any completed processing result, API will return this In-progress result.
	//
	IncludeInprogress *bool `header:"style=simple,explode=false,name=include-inprogress"`
	// Select rule for the analysis, if no header given the default rule will be selected (URL encoded UTF-8 string of rule name)
	//
	Rule *string `header:"style=simple,explode=false,name=rule"`
	// Useful to archive hash lookup.
	//
	// Allow specifying to only perform hash lookup against the original archive file self only,
	// and skip searching all child files result within the original archive.
	//
	// Default value is false.
	//
	Selfonly *bool `header:"style=simple,explode=false,name=selfonly"`
	// The number of items to be fetched next, counting from the item order indicated in first header
	Size *int64 `queryParam:"style=form,explode=true,name=size"`
	// Scoping down the recent number of hours that hash lookup task should start from till now,
	// instead of searching the entire scan history in MetaDefender Core database.
	//
	// Default value is 0. That means no time scope.
	//
	Timerange *int64 `header:"style=simple,explode=false,name=timerange"`
}

type HashGetResponse struct {
	// Get information of file
	AnalysisResult *shared.AnalysisResult
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}
