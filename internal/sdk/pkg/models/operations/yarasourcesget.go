// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Metadefender/internal/sdk/pkg/models/shared"
	"net/http"
)

type YaraSourcesGetRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

func (o *YaraSourcesGetRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

// YaraSourcesGetYaraResponseBody - Unexpected event on server
type YaraSourcesGetYaraResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *YaraSourcesGetYaraResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// YaraSourcesGetResponseBody - Invalid user information or Not Allowed
type YaraSourcesGetResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *YaraSourcesGetResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

type YaraSourcesGetResponse struct {
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *YaraSourcesGetResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *YaraSourcesGetYaraResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A list of Yara Engine sources.
	YaraSourcesObject *shared.YaraSourcesObject
}

func (o *YaraSourcesGetResponse) GetFourHundredAndThreeApplicationJSONObject() *YaraSourcesGetResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *YaraSourcesGetResponse) GetFiveHundredApplicationJSONObject() *YaraSourcesGetYaraResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *YaraSourcesGetResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *YaraSourcesGetResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *YaraSourcesGetResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *YaraSourcesGetResponse) GetYaraSourcesObject() *shared.YaraSourcesObject {
	if o == nil {
		return nil
	}
	return o.YaraSourcesObject
}
