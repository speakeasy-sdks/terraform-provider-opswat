// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ProductVersionRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey *string `header:"style=simple,explode=false,name=apikey"`
}

func (o *ProductVersionRequest) GetApikey() *string {
	if o == nil {
		return nil
	}
	return o.Apikey
}

// ProductVersion500ApplicationJSON - Unexpected event on server
type ProductVersion500ApplicationJSON struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ProductVersion500ApplicationJSON) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ProductVersion200ApplicationJSON - Provides productId and version information.
type ProductVersion200ApplicationJSON struct {
	// Product identifier.
	ProductID *string `json:"product_id,omitempty"`
	// The product version currently used.
	Version *string `json:"version,omitempty"`
}

func (o *ProductVersion200ApplicationJSON) GetProductID() *string {
	if o == nil {
		return nil
	}
	return o.ProductID
}

func (o *ProductVersion200ApplicationJSON) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

type ProductVersionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Provides productId and version information.
	ProductVersion200ApplicationJSONObject *ProductVersion200ApplicationJSON
	// Unexpected event on server
	ProductVersion500ApplicationJSONObject *ProductVersion500ApplicationJSON
}

func (o *ProductVersionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ProductVersionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ProductVersionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ProductVersionResponse) GetProductVersion200ApplicationJSONObject() *ProductVersion200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ProductVersion200ApplicationJSONObject
}

func (o *ProductVersionResponse) GetProductVersion500ApplicationJSONObject() *ProductVersion500ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ProductVersion500ApplicationJSONObject
}
