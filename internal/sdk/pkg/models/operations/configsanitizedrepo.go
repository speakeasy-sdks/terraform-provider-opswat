// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ConfigSanitizedRepoRequestBody struct {
	// The number of minutes of data retention. Anything older than this number will be deleted.
	Maxage *int64 `json:"maxage,omitempty"`
}

func (o *ConfigSanitizedRepoRequestBody) GetMaxage() *int64 {
	if o == nil {
		return nil
	}
	return o.Maxage
}

type ConfigSanitizedRepoRequest struct {
	RequestBody *ConfigSanitizedRepoRequestBody `request:"mediaType=application/json"`
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
}

func (o *ConfigSanitizedRepoRequest) GetRequestBody() *ConfigSanitizedRepoRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *ConfigSanitizedRepoRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

// ConfigSanitizedRepoConfigResponse500ResponseBody - Unexpected event on server
type ConfigSanitizedRepoConfigResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigSanitizedRepoConfigResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigSanitizedRepoConfigResponseResponseBody - The user has no rights for this operation.
type ConfigSanitizedRepoConfigResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigSanitizedRepoConfigResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigSanitizedRepoConfigResponseBody - Invalid user information or Not Allowed
type ConfigSanitizedRepoConfigResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *ConfigSanitizedRepoConfigResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// ConfigSanitizedRepoResponseBody - Request processed successfully
type ConfigSanitizedRepoResponseBody struct {
	// The number of minutes of data retention. Anything older than this number will be deleted.
	Maxage *int64 `json:"maxage,omitempty"`
}

func (o *ConfigSanitizedRepoResponseBody) GetMaxage() *int64 {
	if o == nil {
		return nil
	}
	return o.Maxage
}

type ConfigSanitizedRepoResponse struct {
	// Request processed successfully
	TwoHundredApplicationJSONObject *ConfigSanitizedRepoResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *ConfigSanitizedRepoConfigResponseBody
	// The user has no rights for this operation.
	FourHundredAndFiveApplicationJSONObject *ConfigSanitizedRepoConfigResponseResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *ConfigSanitizedRepoConfigResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ConfigSanitizedRepoResponse) GetTwoHundredApplicationJSONObject() *ConfigSanitizedRepoResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *ConfigSanitizedRepoResponse) GetFourHundredAndThreeApplicationJSONObject() *ConfigSanitizedRepoConfigResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *ConfigSanitizedRepoResponse) GetFourHundredAndFiveApplicationJSONObject() *ConfigSanitizedRepoConfigResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *ConfigSanitizedRepoResponse) GetFiveHundredApplicationJSONObject() *ConfigSanitizedRepoConfigResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *ConfigSanitizedRepoResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ConfigSanitizedRepoResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ConfigSanitizedRepoResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
