// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type BatchCancelRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey *string `header:"style=simple,explode=false,name=apikey"`
	// The batch identifier used to submit files in the batch and to close the batch.
	BatchID string `pathParam:"style=simple,explode=false,name=batchId"`
}

func (o *BatchCancelRequest) GetApikey() *string {
	if o == nil {
		return nil
	}
	return o.Apikey
}

func (o *BatchCancelRequest) GetBatchID() string {
	if o == nil {
		return ""
	}
	return o.BatchID
}

// BatchCancelBatchResponse500ResponseBody - Unexpected event on server
type BatchCancelBatchResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCancelBatchResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCancelBatchResponse404ResponseBody - Batch not found (invalid id)
type BatchCancelBatchResponse404ResponseBody struct {
	Err *string `json:"err,omitempty"`
}

func (o *BatchCancelBatchResponse404ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCancelBatchResponseResponseBody - Invalid user information or Not Allowed
type BatchCancelBatchResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCancelBatchResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCancelBatchResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type BatchCancelBatchResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *BatchCancelBatchResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// BatchCancelResponseBody - Batch cancelled.
type BatchCancelResponseBody struct {
}

type BatchCancelResponse struct {
	// Batch cancelled.
	TwoHundredApplicationJSONObject *BatchCancelResponseBody
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *BatchCancelBatchResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *BatchCancelBatchResponseResponseBody
	// Batch not found (invalid id)
	FourHundredAndFourApplicationJSONObject *BatchCancelBatchResponse404ResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *BatchCancelBatchResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *BatchCancelResponse) GetTwoHundredApplicationJSONObject() *BatchCancelResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *BatchCancelResponse) GetFourHundredApplicationJSONObject() *BatchCancelBatchResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *BatchCancelResponse) GetFourHundredAndThreeApplicationJSONObject() *BatchCancelBatchResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *BatchCancelResponse) GetFourHundredAndFourApplicationJSONObject() *BatchCancelBatchResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *BatchCancelResponse) GetFiveHundredApplicationJSONObject() *BatchCancelBatchResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *BatchCancelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *BatchCancelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *BatchCancelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
