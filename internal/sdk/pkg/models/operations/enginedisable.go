// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EngineDisableRequest struct {
	// Generated `session_id` from [Login](/mdcore/metadefender-core/ref#userlogin) call can be used as an `apikey` for API calls that require authentication.
	//
	Apikey string `header:"style=simple,explode=false,name=apikey"`
	// The unique engine identifier
	EngineID string `pathParam:"style=simple,explode=false,name=engineId"`
}

func (o *EngineDisableRequest) GetApikey() string {
	if o == nil {
		return ""
	}
	return o.Apikey
}

func (o *EngineDisableRequest) GetEngineID() string {
	if o == nil {
		return ""
	}
	return o.EngineID
}

// EngineDisableEnginesResponse500ResponseBody - Unexpected event on server
type EngineDisableEnginesResponse500ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineDisableEnginesResponse500ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineDisableEnginesResponse405ResponseBody - The user has no rights for this operation.
type EngineDisableEnginesResponse405ResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineDisableEnginesResponse405ResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineDisableEnginesResponseResponseBody - Invalid user information or Not Allowed
type EngineDisableEnginesResponseResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineDisableEnginesResponseResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineDisableEnginesResponseBody - Bad Request (e.g. invalid header, apikey is missing or invalid).
type EngineDisableEnginesResponseBody struct {
	// Error reason
	Err *string `json:"err,omitempty"`
}

func (o *EngineDisableEnginesResponseBody) GetErr() *string {
	if o == nil {
		return nil
	}
	return o.Err
}

// EngineDisableResponseBody - Request processed successfully
type EngineDisableResponseBody struct {
	Result *string `json:"result,omitempty"`
}

func (o *EngineDisableResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

type EngineDisableResponse struct {
	// Request processed successfully
	TwoHundredApplicationJSONObject *EngineDisableResponseBody
	// Bad Request (e.g. invalid header, apikey is missing or invalid).
	FourHundredApplicationJSONObject *EngineDisableEnginesResponseBody
	// Invalid user information or Not Allowed
	FourHundredAndThreeApplicationJSONObject *EngineDisableEnginesResponseResponseBody
	// The user has no rights for this operation.
	FourHundredAndFiveApplicationJSONObject *EngineDisableEnginesResponse405ResponseBody
	// Unexpected event on server
	FiveHundredApplicationJSONObject *EngineDisableEnginesResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *EngineDisableResponse) GetTwoHundredApplicationJSONObject() *EngineDisableResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *EngineDisableResponse) GetFourHundredApplicationJSONObject() *EngineDisableEnginesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *EngineDisableResponse) GetFourHundredAndThreeApplicationJSONObject() *EngineDisableEnginesResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *EngineDisableResponse) GetFourHundredAndFiveApplicationJSONObject() *EngineDisableEnginesResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *EngineDisableResponse) GetFiveHundredApplicationJSONObject() *EngineDisableEnginesResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *EngineDisableResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EngineDisableResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EngineDisableResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
