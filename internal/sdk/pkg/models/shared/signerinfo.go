// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SignerInfo struct {
	// Digest algorithm.
	DigestAlgorithm *string `json:"digest_algorithm,omitempty"`
	// Encryption algorithm.
	DigestEncryptionAlgorithm *string `json:"digest_encryption_algorithm,omitempty"`
	// Entity that develops and registers the certificate.
	Issuer *string `json:"issuer,omitempty"`
	// Serial number of the certificate.
	SerialNumber *string `json:"serial_number,omitempty"`
	// Entity that is issued a certificate and utilize it for creating a digital signature.
	VendorName *string `json:"vendor_name,omitempty"`
	// Version of X.509 that is used in the certificate. This version field is zero-based.
	//
	// * 0: v1
	// * 1: v2
	// * 2: v3
	//
	Version *string `json:"version,omitempty"`
}

func (o *SignerInfo) GetDigestAlgorithm() *string {
	if o == nil {
		return nil
	}
	return o.DigestAlgorithm
}

func (o *SignerInfo) GetDigestEncryptionAlgorithm() *string {
	if o == nil {
		return nil
	}
	return o.DigestEncryptionAlgorithm
}

func (o *SignerInfo) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *SignerInfo) GetSerialNumber() *string {
	if o == nil {
		return nil
	}
	return o.SerialNumber
}

func (o *SignerInfo) GetVendorName() *string {
	if o == nil {
		return nil
	}
	return o.VendorName
}

func (o *SignerInfo) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}
