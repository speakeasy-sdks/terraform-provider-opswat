// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScanResultEnum - The overall result for the analyzed file. Value will be one of the following:
//
//	| index         | status                       |
//	|---------------|------------------------------|
//	| 0             | Clean                        |
//	| 1             | Found matched data           |
//	| 2             | Suspicious                   |
//	| 3             | Failed                       |
//	| 4             | Not scanned                  |
type ScanResultEnum int64

const (
	ScanResultEnumZero  ScanResultEnum = 0
	ScanResultEnumOne   ScanResultEnum = 1
	ScanResultEnumTwo   ScanResultEnum = 2
	ScanResultEnumThree ScanResultEnum = 3
	ScanResultEnumFour  ScanResultEnum = 4
)

func (e ScanResultEnum) ToPointer() *ScanResultEnum {
	return &e
}

func (e *ScanResultEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		*e = ScanResultEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanResultEnum: %v", v)
	}
}
