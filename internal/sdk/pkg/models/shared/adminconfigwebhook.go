// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// AdminConfigWebhook - Webhook configuration details.
type AdminConfigWebhook struct {
	// in milliseconds
	Delayduration *float64 `json:"delayduration,omitempty"`
	// in milliseconds
	Delayprogression *float64 `json:"delayprogression,omitempty"`
	// Number of allowed retries sending callback to client when failed.
	//
	// > _**For example**_: maxretrytime= 3
	//
	// Sending callback failed for some reasons
	//   * 1st retry triggered after delayduration (ms)
	//   * 2nd retry triggered after delayduration+ delayprogression (ms)
	//   * 3rd retry triggered after delayduration+ 2*delayprogression (ms)
	//
	Maxretrytime *float64 `json:"maxretrytime,omitempty"`
	// Total requests can be sent concurrently for each worker.
	//
	Requestqueue *float64 `json:"requestqueue,omitempty"`
	// After this transfer timeout (in milliseconds), if MetaDefender Core still doesn't receive webhook server's response,
	// it will try to send webhook again.
	//
	Transfertimeout *float64 `json:"transfertimeout,omitempty"`
	// Total number of workers for sending the result back to Webhook client. Default is 1. Service restart is required for changes to take effect.
	//
	Workercount *float64 `json:"workercount,omitempty"`
}

func (o *AdminConfigWebhook) GetDelayduration() *float64 {
	if o == nil {
		return nil
	}
	return o.Delayduration
}

func (o *AdminConfigWebhook) GetDelayprogression() *float64 {
	if o == nil {
		return nil
	}
	return o.Delayprogression
}

func (o *AdminConfigWebhook) GetMaxretrytime() *float64 {
	if o == nil {
		return nil
	}
	return o.Maxretrytime
}

func (o *AdminConfigWebhook) GetRequestqueue() *float64 {
	if o == nil {
		return nil
	}
	return o.Requestqueue
}

func (o *AdminConfigWebhook) GetTransfertimeout() *float64 {
	if o == nil {
		return nil
	}
	return o.Transfertimeout
}

func (o *AdminConfigWebhook) GetWorkercount() *float64 {
	if o == nil {
		return nil
	}
	return o.Workercount
}
