// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Action - The type of action that was performed
type Action string

const (
	ActionSanitized Action = "sanitized"
	ActionRemoved   Action = "removed"
)

func (e Action) ToPointer() *Action {
	return &e
}

func (e *Action) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sanitized":
		fallthrough
	case "removed":
		*e = Action(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Action: %v", v)
	}
}

// DeepCDRDetailsAction - The type of action that was performed
type DeepCDRDetailsAction string

const (
	DeepCDRDetailsActionSanitized DeepCDRDetailsAction = "sanitized"
	DeepCDRDetailsActionRemoved   DeepCDRDetailsAction = "removed"
)

func (e DeepCDRDetailsAction) ToPointer() *DeepCDRDetailsAction {
	return &e
}

func (e *DeepCDRDetailsAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sanitized":
		fallthrough
	case "removed":
		*e = DeepCDRDetailsAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeepCDRDetailsAction: %v", v)
	}
}

// DeepCDRDetailsDetails - List of all sanitized objects of a sanitized embedded file
type DeepCDRDetailsDetails struct {
	// The type of action that was performed
	Action *DeepCDRDetailsAction `json:"action,omitempty"`
	// The number of objects that were sanitized/removed.
	Count *int64 `json:"count,omitempty"`
	// Additional information about the sanitized object
	ObjectDetails []string `json:"object_details,omitempty"`
	// The object type that was sanitized/removed.
	ObjectName *string `json:"object_name,omitempty"`
}

func (o *DeepCDRDetailsDetails) GetAction() *DeepCDRDetailsAction {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *DeepCDRDetailsDetails) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *DeepCDRDetailsDetails) GetObjectDetails() []string {
	if o == nil {
		return nil
	}
	return o.ObjectDetails
}

func (o *DeepCDRDetailsDetails) GetObjectName() *string {
	if o == nil {
		return nil
	}
	return o.ObjectName
}

type Details struct {
	// The type of action that was performed
	Action Action `json:"action"`
	// The number of objects that were sanitized/removed.
	Count *int64 `json:"count,omitempty"`
	// Action was successful or not.
	Description *string `json:"description,omitempty"`
	// List of all sanitized objects of a sanitized embedded file
	Details *DeepCDRDetailsDetails `json:"details,omitempty"`
	// If an embedded file was sanitized.
	FileName *string `json:"file_name,omitempty"`
	// Additional information about the sanitized object
	ObjectDetails []string `json:"object_details,omitempty"`
	// The object type that was sanitized/removed.
	ObjectName string `json:"object_name"`
}

func (o *Details) GetAction() Action {
	if o == nil {
		return Action("")
	}
	return o.Action
}

func (o *Details) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *Details) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Details) GetDetails() *DeepCDRDetailsDetails {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *Details) GetFileName() *string {
	if o == nil {
		return nil
	}
	return o.FileName
}

func (o *Details) GetObjectDetails() []string {
	if o == nil {
		return nil
	}
	return o.ObjectDetails
}

func (o *Details) GetObjectName() string {
	if o == nil {
		return ""
	}
	return o.ObjectName
}

// SanitizedFileInfo - Information of sanitized file.
// Only applicable to individual file sanitization, or original archive document sanitization level.
type SanitizedFileInfo struct {
	// Size of sanitized file in bytes.
	FileSize *int64 `json:"file_size,omitempty"`
	// SHA256 hash of sanitized file.
	Sha256 *string `json:"sha256,omitempty"`
}

func (o *SanitizedFileInfo) GetFileSize() *int64 {
	if o == nil {
		return nil
	}
	return o.FileSize
}

func (o *SanitizedFileInfo) GetSha256() *string {
	if o == nil {
		return nil
	}
	return o.Sha256
}

// DeepCDRDetails - Deep CDR module returns forensic info to describe what happened during the process in the case file was successfully sanitized.
type DeepCDRDetails struct {
	// Action was successful or not.
	Description *string `json:"description,omitempty"`
	// List of all sanitized objects
	Details []Details `json:"details,omitempty"`
	// Deep CDR errors are classified into different categories.
	//
	// For more details, please find [Troubleshooting sanitization failures](https://docs.opswat.com/mdcore/deep-cdr/troubleshooting-sanitization-failures)
	//
	FailureCategory *string `json:"failure_category,omitempty"`
	// Information of sanitized file.
	// Only applicable to individual file sanitization, or original archive document sanitization level.
	//
	SanitizedFileInfo *SanitizedFileInfo `json:"sanitized_file_info,omitempty"`
}

func (o *DeepCDRDetails) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DeepCDRDetails) GetDetails() []Details {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *DeepCDRDetails) GetFailureCategory() *string {
	if o == nil {
		return nil
	}
	return o.FailureCategory
}

func (o *DeepCDRDetails) GetSanitizedFileInfo() *SanitizedFileInfo {
	if o == nil {
		return nil
	}
	return o.SanitizedFileInfo
}
