// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// AdminConfigSession - API object for /admin/config/session
type AdminConfigSession struct {
	// The interval (in milliseconds) for overall session length timeout (regardless of activity).
	AbsoluteSessionTimeout *int64 `json:"absoluteSessionTimeout,omitempty"`
	// Allow requests from the same user to come from different IPs.
	AllowCrossIPSessions *bool `json:"allowCrossIpSessions,omitempty"`
	// Allow same user to have multiple active sessions.
	AllowDuplicateSession *bool `json:"allowDuplicateSession,omitempty"`
	// The interval (in milliseconds) for the user's session timeout, based on last activity. Timer starts after the last activity for the apikey.
	SessionTimeout *int64 `json:"sessionTimeout,omitempty"`
}

func (o *AdminConfigSession) GetAbsoluteSessionTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.AbsoluteSessionTimeout
}

func (o *AdminConfigSession) GetAllowCrossIPSessions() *bool {
	if o == nil {
		return nil
	}
	return o.AllowCrossIPSessions
}

func (o *AdminConfigSession) GetAllowDuplicateSession() *bool {
	if o == nil {
		return nil
	}
	return o.AllowDuplicateSession
}

func (o *AdminConfigSession) GetSessionTimeout() *int64 {
	if o == nil {
		return nil
	}
	return o.SessionTimeout
}
